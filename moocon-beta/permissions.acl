/**
 * Sample access control list.
 */
// rule EverybodyCanReadEverything {
//     description: "Everyone can read all resources"
//     participant: "ANY"
//     operation: READ
//     resource: "org.moocon.core.*"
//     action: ALLOW
// }

// rule EverybodyCanSubmitTransactions {
//     description: "Allow all participants to submit transactions"
//     participant: "org.moocon.core.User"
//     operation: CREATE
//     resource: "org.moocon.core.*"
//     action: ALLOW
// }

// rule LearnerHistorianAccess{
//   description: "Only allow Learner to read historian records referencing transactions they submitted."
//   participant(p): "org.moocon.core.Learner"
//   operation: READ
//   resource(r): "org.hyperledger.composer.system.HistorianRecord"
//   condition: (r.participantInvoking != "resource:org.hyperledger.composer.system.NetworkAdmin#admin")
//   action: ALLOW
// }

rule Learner_CM {
    description: "Allow learners to read CourseModule"
    participant: "org.moocon.core.Learner"
    operation: READ
    resource: "org.moocon.core.CourseModule"
    action: ALLOW
}

rule Learner_Unit {
    description: "Allow learners access to ModuleUnit"
    participant: "org.moocon.core.Learner"
    operation: READ
    resource: "org.moocon.core.ModuleUnit"
    action: ALLOW
}

rule Learner_Assessment {
    description: "Allow learners access to Assessment"
    participant: "org.moocon.core.Learner"
    operation: READ
    resource: "org.moocon.core.Assessment"
    action: ALLOW
}

rule Learner_NsubTX {
    description: "Allow learners to add AddSubmission"
    participant: "org.moocon.core.Learner"
    operation: CREATE, READ
    resource: "org.moocon.core.AddSubmission"
    action: ALLOW
}

// rule Learner_BMTX {
//     description: "Allow learners to BeginModule"
//     participant: "org.moocon.core.Learner"
//     operation: CREATE, READ
//     resource: "org.moocon.core.BeginModule"
//     action: ALLOW
// }

rule Learner_Learner {
    description: "Allow all learners to update their own information"
    participant(p): "org.moocon.core.Learner"
    operation: UPDATE, READ
    resource(r): "org.moocon.core.Learner"
    condition: (r.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule Learner_Teacher {
    description: "Allow all learners to read teacher information"
    participant: "org.moocon.core.Learner"
    operation: READ
    resource: "org.moocon.core.Teacher"
    // condition: (r.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule Learner_Submission_Create {
    description: "Allow all learners to create their own submissions"
    participant(p): "org.moocon.core.Learner"
    operation: CREATE
    resource(r): "org.moocon.core.Submission"
    transaction(tx): "org.moocon.core.AddSubmission"
    condition: (r.learner.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule Learner_Submission_Read {
    description: "Allow all learners to read their own submissions"
    participant(p): "org.moocon.core.Learner"
    operation: READ
    resource(r): "org.moocon.core.Submission"
    condition: (r.learner.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule Learner_AutoAssessRequest {
    description: "Allow all learners to create their own AutoAssessRequest"
    participant: "org.moocon.core.Learner"
    operation: CREATE
    resource: "org.moocon.core.AutoAssessRequest"
    transaction: "org.moocon.core.AddSubmission"
    // condition: ( === p.getIdentifier())
    action: ALLOW
}

rule Learner_Update_Cert {
    description: "Allow all learners to update cert via AddSubmission"
    participant: "org.moocon.core.Learner"
    operation: UPDATE
    resource: "org.moocon.core.Certificate"
    transaction: "org.moocon.core.AddSubmission"    
    action: ALLOW
}

// rule Learner_Submission_Update {
//     description: "Allow all learners to update their own submissions with AutoAssess"
//     participant(p): "org.moocon.core.Learner"
//     operation: UPDATE
//     resource(r): "org.moocon.core.Submission"
//     transaction(tx): "org.moocon.core.AutoAssess"
//     condition: (r.learner.getIdentifier() == p.getIdentifier())
//     action: ALLOW
// }

rule Learner_Curriculum {
    description: "Allow all learners to update their own Curriculum with propose tx"
    participant(p): "org.moocon.core.Learner"
    operation: CREATE, UPDATE
    resource(r): "org.moocon.core.Curriculum"
    transaction(tx): "org.moocon.core.ProposeCurriculum"
    condition: (r.learner.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule Learner_Curriculum_Read {
    description: "Allow all learners to read their own Curriculum objects"
    participant(p): "org.moocon.core.Learner"
    operation: READ
    resource(r): "org.moocon.core.Curriculum"
    condition: (r.learner.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule Learner_ProposeCurriculum {
    description: "Allow all learners to create ProposeCurriculum tx"
    participant: "org.moocon.core.Learner"
    operation: CREATE, READ
    resource: "org.moocon.core.ProposeCurriculum"
    action: ALLOW
}

rule Learner_Cert_Read {
    description: "Allow all learners to read their own Certs"
    participant(p): "org.moocon.core.Learner"
    operation: READ
    resource(r): "org.moocon.core.Certificate"
    condition: (r.learner.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

// rule Teacher_Historian{
//   description: "Allow teachers to read all historian records"
//   participant(p): "org.moocon.core.Teacher"
//   operation: READ
//   resource(r): "org.hyperledger.composer.system.HistorianRecord"
//   condition: (r.participantInvoking.getIdentifier() != "org.hyperledger.composer.system.NetworkAdmin#admin")
//   action: ALLOW
// }

rule Teacher_Teacher {
    description: "Allow all teachers to update their own information"
    participant: "org.moocon.core.Teacher"
    operation: READ
    resource: "org.moocon.core.Teacher"
    action: ALLOW
}

rule Teacher_Teacher_Update {
    description: "Allow all teachers to update their own information"
    participant(p): "org.moocon.core.Teacher"
    operation: UPDATE
    resource(r): "org.moocon.core.Teacher"
    condition: (r.getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule Teacher_Learner {
    description: "Allow all teachers to update their own information"
    participant: "org.moocon.core.Teacher"
    operation: READ
    resource: "org.moocon.core.Learner"
    action: ALLOW
}

rule Teacher_Learner_Update_Curr {
    description: "Allow all teachers to update learner's information if the learner has subscribed to a course"
    participant: "org.moocon.core.Teacher"
    operation: UPDATE
    resource: "org.moocon.core.Learner"
    transaction: "org.moocon.core.ApproveCurriculum"    
    action: ALLOW
}

rule Teacher_Create_Cert {
    description: "Allow all teachers to create cert via ApproveCurriculum"
    participant: "org.moocon.core.Teacher"
    operation: CREATE
    resource: "org.moocon.core.Certificate"
    transaction: "org.moocon.core.ApproveCurriculum"    
    action: ALLOW
}

rule Teacher_Update_Cert {
    description: "Allow all teachers to update cert via SignCertificate"
    participant: "org.moocon.core.Teacher"
    operation: UPDATE
    resource: "org.moocon.core.Certificate"
    transaction: "org.moocon.core.SignCertificate"    
    action: ALLOW
}

rule Teacher_Update_Cert_2 {
    description: "Allow all teachers to update cert via SubmitResult"
    participant: "org.moocon.core.Teacher"
    operation: UPDATE
    resource: "org.moocon.core.Certificate"
    transaction: "org.moocon.core.SubmitResult"    
    action: ALLOW
}

rule Teacher_CM {
    description: "Allow Teacher access to CourseModule"
    participant: "org.moocon.core.Teacher"
    operation: READ
    resource: "org.moocon.core.CourseModule"
    action: ALLOW
}

rule Teacher_Unit {
    description: "Allow Teacher access to ModuleUnit"
    participant: "org.moocon.core.Teacher"
    operation: READ
    resource: "org.moocon.core.ModuleUnit"
    action: ALLOW
}

rule Teacher_CMTX {
    //limited to lead instructor right now
    description: "Allow all teachers to run the CreateModule transaction"
    participant: "org.moocon.core.Teacher"
    operation: CREATE
    resource: "org.moocon.core.CreateModule"
    // transaction(tx): "org.moocon.core.CreateModule"
    // condition: (r.teachers[0].getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule Teacher_CM_Create {
    //limited to lead instructor right now
    description: "Allow all teachers to create their own CourseModule"
    participant(p): "org.moocon.core.Teacher"
    operation: CREATE
    resource(r): "org.moocon.core.CourseModule"
    transaction(tx): "org.moocon.core.CreateModule"
    condition: (r.teachers[0].getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule Teacher_Unit_Create {
    //limited to lead instructor right now
    description: "Allow all teachers to create units for their own modules"
    participant(p): "org.moocon.core.Teacher"
    operation: CREATE
    resource(r): "org.moocon.core.ModuleUnit"
    transaction(tx): "org.moocon.core.CreateModule"
    condition: (tx.mod.teachers[0].getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule Teacher_Assessment {
    //limited to lead instructor right now
    description: "Allow all teachers to create their own Assessment"
    participant: "org.moocon.core.Teacher"
    operation: CREATE
    resource: "org.moocon.core.Assessment"
    transaction: "org.moocon.core.CreateModule"
    // condition: (r.teachers[0].getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule Teacher_Submission {
    //limited to lead instructor right now
    description: "Allow all teachers to read Submissions of their own mods"
    participant(p): "org.moocon.core.Teacher"
    operation: READ
    resource(r): "org.moocon.core.Submission"
    condition: (r.teacherAssigned.getIdentifier() === p.getIdentifier())
    // condition: (r.unit.mod.teachers[0].split("#")[1] == p.getIdentifier())
    // condition: (r.unit.mod.teachers[0] == p)    
    action: ALLOW
}

rule Teacher_Submission_UPDATE {
    //limited to lead instructor right now
    description: "Allow all teachers to update Submissions of their own mods with tx"
    participant: "org.moocon.core.Teacher"
    operation: UPDATE
    resource: "org.moocon.core.Submission"
    transaction: "org.moocon.core.SubmitResult"
    // condition: (r.unit.mod.teachers[0].getIdentifier() === p.getIdentifier())
    action: ALLOW
}

rule Teacher_SubmitResult {
    //limited to lead instructor right now
    description: "Allow all teachers to create SubmitResult for Submissions in their own mods"
    participant(p): "org.moocon.core.Teacher"
    operation: CREATE, READ
    resource(r): "org.moocon.core.SubmitResult"
    condition: (r.assessor.getIdentifier() === p.getIdentifier())    
    action: ALLOW
}

rule Teacher_Curriculum{
    description: "Allow teachers to update or approve of Curriculums they are attached to"
    participant(p): "org.moocon.core.Teacher"
    operation: CREATE, UPDATE, READ
    resource(r): "org.moocon.core.Curriculum"
    condition: (r.teacher.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

rule Teacher_ApproveCurriculum {
    description: "Allow all teachers to create ApproveCurriculum tx"
    participant: "org.moocon.core.Teacher"
    operation: CREATE, READ
    resource: "org.moocon.core.ApproveCurriculum"
    action: ALLOW
}

rule Teacher_Cert_Read {
    description: "Allow all teachers to read all Certs (not ideal, further policy needed)"
    participant: "org.moocon.core.Teacher"
    operation: READ
    resource: "org.moocon.core.Certificate"
    action: ALLOW
}

rule Teacher_SignCertificate {
    description: "Allow all teachers to create SignCertificate tx with signer == themselves"
    participant(p): "org.moocon.core.Teacher"
    operation: CREATE, READ
    resource(r): "org.moocon.core.SignCertificate"
    condition: (r.signer.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

// Systems defaults dont touch

rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}